name: ami upload after merge
#workflow will run after the pull request is merged
on:
  push:
    branches:
    - main
jobs:
  packer_build:
#this ami packer file will run on ubuntu latest and will create the AMI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    # env:
    #     AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
    #     AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
      
    steps:
    - uses: actions/checkout@v3
    - name: Python dependencies installed
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Configuring AWS Credentials for dev
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Ckecking the status
      run: |
        aws --version
    - name: Build Tempelates
      working-directory: ${{github.workspace}}
      run: zip -r webapp.zip ./* && 
           packer build ami.pkr.hcl

    - name: Configuring AWS Credentials for demo
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEMO_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.DEMO_AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Build Templates
      working-directory: ${{github.workspace}}
      run: amiID=`cat manifest.json | jq '.builds[0].artifact_id' | awk 'match($0, /ami-.*/) { print substr($0, RSTART, RLENGTH-1) }'` &&
           echo {\"ImageId\":\"$amiId\"} | tee amiconfig.js && aws ec2 create-launch-template-version --launch-template-name vpcdemolambda-launch-template --source-version 1 --launch-template-data "ImageId=$amiID" &&
           aws autoscaling update-auto-scaling-group --auto-scaling-group-name vpcdemolambda-asg --launch-template LaunchTemplateName=vpcdemolambda-launch-template,Version='$Latest' &&
           aws autoscaling start-instance-refresh --auto-scaling-group-name vpcdemolambda-asg

    - name:  aws_instance_refresh
      run: aws ec2 create-launch-template-version --launch-template-name vpcdemolambda-launch-template --source-version 1 --launch-template-data "ImageId=$amiID" &&
           aws autoscaling update-auto-scaling-group --auto-scaling-group-name vpcdemolambda-asg --launch-template LaunchTemplateName=vpcdemolambda-launch-template,Version='$Latest' &&
           aws autoscaling start-instance-refresh --auto-scaling-group-name vpcdemolambda-asg

